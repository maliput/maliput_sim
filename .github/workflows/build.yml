name: colcon build & test

on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PACKAGE_NAME: maliput_sim
  ROS_DISTRO: foxy

jobs:
  compile_and_test:
    name: Compile and test
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    steps:
    - uses: actions/checkout@v4
    - uses: ros-tooling/setup-ros@v0.6
    - name: poetry install
      shell: bash
      run: pip3 install poetry
      # TODO(francocipollone): Once https://github.com/UrbanMachine/colcon-poetry-ros/pull/41 is merged we can point to the official colcon-poetry-ros.
    - name: colcon-poetry-ros install
      shell: bash
      run: pip3 install 'colcon-poetry-ros @ git+https://github.com/francocipollone/colcon-poetry-ros.git@francocipollone/fix_deps'
    - uses: ros-tooling/action-ros-ci@v0.3
      id: action_ros_ci_step
      with:
        package-name: ${{ env.PACKAGE_NAME }}
        target-ros2-distro: ${{ env.ROS_DISTRO }}
        vcs-repo-file-url: ${GITHUB_WORKSPACE}/.github/dependencies.repos
        skip-tests: true
    # Install package's poetry dependencies
    # action_ros_ci action wipes the workspace in every run, so we need to install the python dependencies
    # after the build and run the tests separetly.
    - name: install package's poetry dependencies
      shell: bash
      run: python3 -m colcon_poetry_ros.dependencies.install --base-paths ${GITHUB_WORKSPACE}/../ --install-base ${{ steps.action_ros_ci_step.outputs.ros-workspace-directory-name }}/install
    - name: colcon test
      shell: bash
      working-directory: ${{ steps.action_ros_ci_step.outputs.ros-workspace-directory-name }}
      run: |
        . /opt/ros/${{ env.ROS_DISTRO }}/setup.bash;
        colcon test --packages-select ${{ env.PACKAGE_NAME }} --event-handlers console_direct+;
    - name: colcon test-result
      shell: bash
      working-directory: ${{ steps.action_ros_ci_step.outputs.ros-workspace-directory-name }}
      run: colcon test-result --verbose --all
