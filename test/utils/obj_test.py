# BSD 3-Clause License
#
# Copyright (c) 2023, Woven by Toyota
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import unittest
import os
from tempfile import gettempdir

from ament_index_python.packages import get_package_share_directory
import maliput.plugin

from maliput_sim.utils.obj import generate_obj_file_from_road_network, get_obj_description_from_road_network


class MaliputToObjTests(unittest.TestCase):
    """Tests for the maliput to obj conversion."""
    _MALIPUT_BACKEND = "maliput_malidrive"
    _TMP_DIR = "/tmp/maliput_sim/test/utils/obj_test"
    _OBJ_FILE = _TMP_DIR + "/road_network.obj"
    _DEFAULT_OBJ_PATH = gettempdir() + "/maliput_sim/road_network.obj"

    def __init__(self, *args):
        super().__init__(*args)
        self._remove_list = []

    def setUp(self):
        maliput_backend_share_dir = get_package_share_directory(self._MALIPUT_BACKEND)
        rn_configuration = {"opendrive_file":
                            maliput_backend_share_dir + "/resources/odr/TShapeRoad.xodr"}
        self._maliput_road_network = maliput.plugin.create_road_network(
            self._MALIPUT_BACKEND, rn_configuration)

    def tearDown(self):
        # Remove the generated obj files.
        for file in self._remove_list:
            os.remove(file)

    def test_generate_obj_file_from_road_network(self):
        obj_filepath = generate_obj_file_from_road_network(self._maliput_road_network, self._TMP_DIR)
        self._remove_list.append(obj_filepath)

        self.assertTrue(os.path.exists(obj_filepath))
        self.assertEqual(obj_filepath, self._OBJ_FILE)

    def test_generate_obj_file_from_road_network_default_out_dir(self):
        obj_filepath = generate_obj_file_from_road_network(self._maliput_road_network)
        self._remove_list.append(obj_filepath)

        self.assertTrue(os.path.exists(obj_filepath))
        self.assertEqual(obj_filepath, self._DEFAULT_OBJ_PATH)

    def test_get_obj_description_from_road_network(self):
        obj_description = get_obj_description_from_road_network(self._maliput_road_network)
        self._remove_list.append(self._DEFAULT_OBJ_PATH)
        self.assertNotEqual(obj_description, '')
        # Read the first line of the obj file description.
        self.assertEqual(obj_description.splitlines()[0], '# GENERATED BY maliput::utility::GenerateObjFile()')
